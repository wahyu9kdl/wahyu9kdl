---
judul: Bekerja dengan registri npm
intro: 'Anda dapat mengonfigurasi npm untuk menerbitkan paket ke {% datavariabel.product.prodname_registry %} dan untuk menggunakan paket yang disimpan di {% datavariabel.product.prodname_registry %} sebagai dependensi dalam proyek npm.'
produk: '{% data reusables.gated-features.packages %}'
redirect_from:
  - /articles/configuring-npm-for-use-with-github-package-registry
  - /github/managing-packages-with-github-package-registry/configuring-npm-for-use-with-github-package-registry
  - /github/managing-packages-with-github-packages/configuring-npm-for-use-with-github-packages
  - /packages/using-github-packages-with-your-projects-ecosystem/configuring-npm-for-use-with-github-packages
  - /packages/guides/configuring-npm-for-use-with-github-packages
versi:
  fpt: '*'
  gw: '*'
  gw: '*'
shortTitle: npm registry
---

{% data reusables.package_registry.packages-ghes-release-stage %}
{% data reusables.package_registry.packages-ghae-release-stage %}

{% data reusables.package_registry.admins-can-configure-package-types %}

{% ifversion fpt atau ghes > 2.22 atau ghae %}
## Batas untuk versi npm yang diterbitkan

Jika Anda memublikasikan lebih dari 1.000 versi paket npm ke {% data variables.product.prodname_registry %}, Anda mungkin melihat masalah kinerja dan waktu tunggu terjadi selama penggunaan.

Di masa mendatang, untuk meningkatkan kinerja layanan, Anda tidak akan dapat memublikasikan lebih dari 1.000 versi paket di {% datavariabel.product.prodname_dotcom %}. Versi apa pun yang diterbitkan sebelum mencapai batas ini akan tetap dapat dibaca.

Jika Anda mencapai batas ini, pertimbangkan untuk menghapus versi paket atau hubungi Dukungan untuk mendapatkan bantuan. Ketika batas ini diberlakukan, dokumentasi kami akan diperbarui dengan cara untuk mengatasi batas ini. Untuk informasi selengkapnya, lihat "{% ifversion fpt or ghes > 3.0 %}[Menghapus dan memulihkan paket](/packages/learn-github-packages/deleting-and-restoring-a-package){% elsif ghes < 3.1 atau ghae %}[Menghapus paket](/packages/learn-github-packages/deleting-a-package){% endif %}" atau "[Menghubungi Dukungan](/packages/learn-github-packages/about-github- paket#menghubungi-dukungan)."

{% berakhir jika %}

## Mengautentikasi ke {% variabel data.product.prodname_registry %}

{% data reusables.package_registry.authenticate-packages %}

{% data reusables.package_registry.authenticate-packages-github-token %}

### Mengautentikasi dengan token akses pribadi

{% data reusables.package_registry.required-scopes %}

Anda dapat mengautentikasi ke {% data variable.product.prodname_registry %} dengan npm dengan mengedit file *~/.npmrc* per pengguna Anda untuk menyertakan token akses pribadi Anda atau dengan masuk ke npm pada baris perintah menggunakan nama pengguna dan tanda akses pribadi.

Untuk mengautentikasi dengan menambahkan token akses pribadi Anda ke file *~/.npmrc*, edit file *~/.npmrc* agar proyek Anda menyertakan baris berikut, ganti {% ifversion ghes or ghae %}*HOSTNAME* dengan nama host dari {% data variable.product.product_location %} dan {% endif %}*TOKEN* dengan token akses pribadi Anda. Buat file *~/.npmrc* baru jika belum ada.

{% ifversion ghes %}
Jika instance Anda mengaktifkan isolasi subdomain:
{% berakhir jika %}

``` kulit
//{% ifversion fpt %}npm.pkg.github.com{% else %}npm.<em>HOSTNAME</em>/{% endif %}/:_authToken=<em>TOKEN</em>
```

{% ifversion ghes %}
Jika instance Anda menonaktifkan isolasi subdomain:

``` kulit
//<em>HOSTNAME</em>/_registry/npm/:_authToken=<em>TOKEN</em>
```
{% berakhir jika %}

Untuk mengautentikasi dengan masuk ke npm, gunakan perintah `npm login`, ganti *USERNAME* dengan nama pengguna {% data variable.product.prodname_dotcom %} Anda, *TOKEN* dengan token akses pribadi Anda, dan *PUBLIC-EMAIL-ADDRESS * dengan alamat email Anda.

Jika {% datavariabel.product.prodname_registry %} bukan registry paket default Anda untuk menggunakan npm dan Anda ingin menggunakan perintah `npm audit`, kami sarankan Anda menggunakan flag `--scope` dengan pemilik paket saat Anda mengautentikasi ke {% variabel data.product.prodname_registry %}.

{% ifversion ghes %}
Jika instance Anda mengaktifkan isolasi subdomain:
{% berakhir jika %}

``` kulit
$ npm login --scope=@<em>OWNER</em> --registry=https://{% ifversion fpt %}npm.pkg.github.com{% else %}npm.<em>HOSTNAME</ em>/{% endif %}

> Nama pengguna: <em>USERNAME</em>
> Kata Sandi: <em>TOKEN</em>
> Email: <em>PUBLIC-EMAIL-ADDRESS</em>
```

{% ifversion ghes %}
Jika instance Anda menonaktifkan isolasi subdomain:

``` kulit
$npm login --scope=@<em>OWNER</em> --registry=https://<em>HOSTNAME</em>/_registry/npm/
> Nama pengguna: <em>USERNAME</em>
> Kata Sandi: <em>TOKEN</em>
> Email: <em>PUBLIC-EMAIL-ADDRESS</em>
```
{% berakhir jika %}

## Menerbitkan paket

{% catatan %}

**Catatan:** Nama dan cakupan paket hanya boleh menggunakan huruf kecil.

{% catatan akhir %}

Secara default, {% datavariabel.product.prodname_registry %} menerbitkan paket di repositori {% data variables.product.prodname_dotcom %} yang Anda tentukan di bidang nama file *package.json*. Misalnya, Anda akan menerbitkan paket bernama `@my-org/test` ke repositori `my-org/test` {% data variables.product.prodname_dotcom %}. Anda dapat menambahkan ringkasan untuk halaman daftar paket dengan menyertakan file *README.md* di direktori paket Anda. Untuk informasi selengkapnya, lihat "[Bekerja dengan package.json](https://docs.npmjs.com/getting-started/using-a-package.json)" dan "[Cara membuat Modul Node.js](https ://docs.npmjs.com/getting-started/creating-node-modules)" dalam dokumentasi npm.

Anda dapat memublikasikan beberapa paket ke repositori {% datavariabel.product.prodname_dotcom %} yang sama dengan menyertakan bidang `URL` dalam file *package.json*. Untuk informasi selengkapnya, lihat "[Menerbitkan beberapa paket ke repositori yang sama](#publishing-multiple-packages-to-the-same-repository)."

Anda dapat menyiapkan pemetaan cakupan untuk proyek Anda menggunakan file *.npmrc* lokal dalam proyek atau menggunakan opsi `publishConfig` di *package.json*. {% data variable.product.prodname_registry %} hanya mendukung paket npm cakupan. Paket cakupan memiliki nama dengan format `@owner/name`. Paket cakupan selalu dimulai dengan simbol `@`. Anda mungkin perlu memperbarui nama di *package.json* Anda untuk menggunakan nama cakupan. Misalnya, `"name": "@codertocat/hello-world-npm"`.

{% data reusables.package_registry.viewing-packages %}

### Menerbitkan paket menggunakan file *.npmrc* lokal

Anda dapat menggunakan file *.npmrc* untuk mengonfigurasi pemetaan cakupan proyek Anda. Dalam file *.npmrc*, gunakan URL {% datavariabel.product.prodname_registry %} dan pemilik akun sehingga {% variabel data.product.prodname_registry %} tahu ke mana harus merutekan permintaan paket. Menggunakan file *.npmrc* mencegah pengembang lain secara tidak sengaja memublikasikan paket ke npmjs.org alih-alih {% datavariabel.product.prodname_registry %}.

{% data reusables.package_registry.authenticate-langkah %}
{% data reusables.package_registry.create-npmrc-owner-step %}
{% data reusables.package_registry.add-npmrc-to-repo-step %}
1. Verifikasi nama paket Anda di *package.json* proyek Anda. Bidang `name` harus berisi ruang lingkup dan nama paket. Misalnya, jika paket Anda disebut "test", dan Anda memublikasikan ke organisasi "My-org" {% data variables.product.prodname_dotcom %}, bidang `name` di *package.json* Anda harus ` @my-org/test`.
{% data reusables.package_registry.verify_repository_field %}
{% data reusables.package_registry.publish_package %}

### Menerbitkan paket menggunakan `publishConfig` di file *package.json*

Anda dapat menggunakan elemen `publishConfig` dalam file *package.json* untuk menentukan registri tempat Anda ingin menerbitkan paket. Untuk informasi selengkapnya, lihat "[publishConfig](https://docs.npmjs.com/files/package.json#publishconfig)" di dokumentasi npm.

1. Edit file *package.json* untuk paket Anda dan sertakan entri `publishConfig`.
  {% ifversion ghes %}
  Jika instance Anda mengaktifkan isolasi subdomain:
  {% berakhir jika %}
  ``` kulit
  "publishConfig": {
    "registry":"https://{% ifversion fpt %}npm.pkg.github.com{% else %}npm.<em>HOSTNAME</em>/{% endif %}"
  },
  ```
  {% ifversion ghes %}
  Jika instance Anda menonaktifkan isolasi subdomain:
   ``` kulit
   "publishConfig": {
     "registry":"https://<em>HOSTNAME</em>/_registry/npm/"
   },
  ```
  {% berakhir jika %}
{% data reusables.package_registry.verify_repository_field %}
{% data reusables.package_registry.publish_package %}

## Menerbitkan beberapa paket ke repositori yang sama

Untuk memublikasikan beberapa paket ke repositori yang sama, Anda dapat menyertakan URL repositori {% data variables.product.prodname_dotcom %} di bidang `repository` dari file *package.json* untuk setiap paket.

Untuk memastikan URL repositori sudah benar, ganti REPOSITORY dengan nama repositori yang berisi paket yang ingin Anda publikasikan, dan OWNER dengan nama pengguna atau akun organisasi di {% data variables.product.prodname_dotcom %} yang memiliki repositori .

{% data variable.product.prodname_registry %} akan cocok dengan repositori berdasarkan URL, bukan berdasarkan nama paket.

``` kulit
"repository":"https://{% ifversion fpt %}github.com{% else %}<em>HOSTNAME</em>{% endif %}/<em>PEMILIK</em>/<em>REPOSITORY </em>",
```

## Menginstal paket

Anda dapat menginstal paket dari {% data variables.product.prodname_registry %} dengan menambahkan paket sebagai dependensi dalam file *package.json* untuk proyek Anda. Untuk informasi selengkapnya tentang menggunakan *package.json* dalam proyek Anda, lihat "[Bekerja dengan package.json](https://docs.npmjs.com/getting-started/using-a-package.json)" di dokumentasi npm.

Secara default, Anda dapat menambahkan paket dari satu organisasi. Untuk informasi selengkapnya, lihat "[Menginstal paket dari organisasi lain](#installing-packages-from-other-organizations)."

Anda juga perlu menambahkan file *.npmrc* ke proyek Anda sehingga semua permintaan untuk menginstal paket akan {% ifversion ghae %}dirutekan ke{% else %}melalui{% endif %} {% data variable.product. prodname_registry %}. {% ifversion fpt or ghes > 2.21 %}Saat Anda merutekan semua permintaan paket melalui {% data variables.product.prodname_registry %}, Anda dapat menggunakan paket tercakup dan tidak tercakup dari *npmjs.org*. Untuk informasi selengkapnya, lihat "[npm-scope](https://docs.npmjs.com/misc/scope)" dalam dokumentasi npm.{% endif %}

{% ifversion ghae %}
Secara default, Anda hanya dapat menggunakan paket npm yang dihosting di perusahaan Anda, dan Anda tidak akan dapat menggunakan paket yang tidak tercakup. Untuk informasi selengkapnya tentang pelingkupan paket, lihat "[npm-scope](https://docs.npmjs.com/misc/scope)" dalam dokumentasi npm. Jika diperlukan, dukungan {% data variable.product.prodname_dotcom %} dapat mengaktifkan proxy upstream ke npmjs.org. Setelah proxy upstream diaktifkan, jika paket yang diminta tidak ditemukan di perusahaan Anda, {% data variables.product.prodname_registry %} membuat permintaan proxy ke npmjs.org.  
{% berakhir jika %}

{% data reusables.package_registry.authenticate-langkah %}
{% data reusables.package_registry.create-npmrc-owner-step %}
{% data reusables.package_registry.add-npmrc-to-repo-step %}
4. Konfigurasikan *package.json* di proyek Anda untuk menggunakan paket yang Anda instal. Untuk menambahkan dependensi paket Anda ke file *package.json* untuk {% variabel data.product.prodname_registry %}, tentukan nama paket cakupan penuh, seperti `@my-org/server`. Untuk paket dari *npmjs.com*, tentukan nama lengkapnya, seperti `@babel/core` atau `@lodash`. Misalnya, *package.json* berikut ini menggunakan paket `@octo-org/octo-app` sebagai dependensi.

  ```json
  {
    "nama": "@my-org/server",
    "versi": "1.0.0",
    "description": "Aplikasi server yang menggunakan paket @octo-org/octo-app",
    "utama": "index.js",
    "Pengarang": "",
    "lisensi": "MIT",
    "ketergantungan": {
      "@octo-org/octo-app": "1.0.0"
    }
  }
  ```
5. Instal paket.

  ``` kulit
  $npm instal
  ```

### Menginstal paket dari organisasi lain

Secara default, Anda hanya dapat menggunakan paket {% datavariabel.product.prodname_registry %} dari satu organisasi. Jika Anda ingin merutekan permintaan paket ke beberapa organisasi dan pengguna, Anda dapat menambahkan baris tambahan ke file *.npmrc* Anda, menggantikan {% ifversion ghes or ghae %}*HOSTNAME* dengan nama host dari {% variabel data. product.product_location %} dan {% endif %}*OWNER* dengan nama pengguna atau akun organisasi yang memiliki repositori yang berisi proyek Anda.

{% ifversion ghes %}
Jika instance Anda mengaktifkan isolasi subdomain:
{% berakhir jika %}

``` kulit
@<em>PEMILIK</em>:registry=https://{% ifversion fpt %}npm.pkg.github.com{% else %}npm.<em>HOSTNAME</em>{% endif %}
@<em>PEMILIK</em>:registry=https://{% ifversion fpt %}npm.pkg.github.com{% else %}npm.<em>HOSTNAME</em>{% endif %}
```

{% ifversion ghes %}
Jika instance Anda menonaktifkan isolasi subdomain:

``` kulit
@<em>PEMILIK</em>:registry=https://<em>NAMA HOST</em>/_registry/npm
@<em>PEMILIK</em>:registry=https://<em>NAMA HOST</em>/_registry/npm
```
{% berakhir jika %}

{% ifversion ghes > 2,22 %}
## Menggunakan registri NPM resmi

{% datavariabel.product.prodname_registry %} memungkinkan Anda mengakses registri NPM resmi di `registry.npmjs.com`, jika administrator {% data variables.product.prodname_ghe_server %} Anda telah mengaktifkan fitur ini. Untuk informasi lebih lanjut, lihat [Menghubungkan ke registri NPM resmi](/admin/packages/configuring-packages-support-for-your-enterprise#connecting-to-the-official-npm-registry).
{% berakhir jika %}

## Bacaan lebih lanjut

- "{% ifversion fpt or ghes > 3.0 %}[Menghapus dan memulihkan sebuah paket](/packages/learn-github-packages/deleting-and-restoring-a-package){% elsif ghes < 3.1 or ghae %}[ Menghapus sebuah paket](/packages/learn-github-packages/deleting-a-package){% endif %}"
